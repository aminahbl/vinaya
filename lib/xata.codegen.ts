// Generated by Xata Codegen 0.25.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [{ name: "rules_bi", columns: [] }] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type RulesBi = InferredTypes["rules_bi"];
export type RulesBiRecord = RulesBi & XataRecord;

export type DatabaseSchema = {
  rules_bi: RulesBiRecord;
};

const DatabaseClient = buildClient();

// const defaultOptions = {
//   databaseURL: "https://owili-iodq2k.eu-central-1.xata.sh/db/vinaya",
// };

const defaultOptions = {
  enableBrowser: true,
  apiKey: process.env.NEXT_PUBLIC_XATA_API_KEY,
  databaseURL: "https://owili-iodq2k.eu-central-1.xata.sh/db/vinaya",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
