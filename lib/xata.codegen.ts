// Generated by Xata Codegen 0.25.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "rules_bi",
    columns: [
      { name: "title", type: "string" },
      { name: "category", type: "link", link: { table: "categories" } },
      { name: "rule", type: "text" },
      { name: "imgId", type: "string" },
    ],
  },
  {
    name: "categories",
    columns: [
      { name: "name", type: "string" },
      { name: "position", type: "int" },
    ],
    revLinks: [{ column: "category", table: "rules_bi" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type RulesBi = InferredTypes["rules_bi"];
export type RulesBiRecord = RulesBi & XataRecord;

export type Categories = InferredTypes["categories"];
export type CategoriesRecord = Categories & XataRecord;

export type DatabaseSchema = {
  rules_bi: RulesBiRecord;
  categories: CategoriesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://owili-iodq2k.eu-central-1.xata.sh/db/vinaya",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
